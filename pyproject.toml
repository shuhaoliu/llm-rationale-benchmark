[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rationale-benchmark"
version = "0.1.0"
description = "A configurable benchmark tool for evaluating LLMs based on human-like reasoning patterns"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Shuhao Liu" },
  { name = "Xiaotian Wang" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
  "PyYAML>=6.0",
  "click>=8.0.0",
  "aiohttp>=3.8.0",
  "pydantic>=2.0.0",
  "structlog>=25.4.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-mock>=3.10.0",
  "pytest-cov>=4.0.0",
  "black>=23.0.0",
  "ruff>=0.1.0",
  "mypy>=1.0.0",
  "coverage>=7.0.0",
]
docs = [
  "sphinx>=5.0.0",
]

[project.scripts]
rationale-benchmark = "rationale_benchmark.cli:main"

[project.urls]
Homepage = "https://github.com/shuhaoliu/rationale-benchmark"
Repository = "https://github.com/shuhaoliu/rationale-benchmark"
Issues = "https://github.com/shuhaoliu/rationale-benchmark/issues"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["rationale_benchmark"]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.9.2",
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.4",
]
